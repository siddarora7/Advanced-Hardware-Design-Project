// Initializations
sub r0, r0, r0 // r0 = 0
sub r31, r31, r31 // r31 = 0
lw r0, r31, 36 // r0 = Mem[r31+36] = Mem[36] => r0 = A
sub r1, r1, r1 // r1 = 0
lw r1, r31, 10 // r1 = Mem[r31+10] = Mem[10] => r1 = S[0]
add r0, r1, r0 // r0 = r0+r1 (A = A + S[0])

sub r1, r1, r1 // r1 = 0
lw r1, r31, 37 // r1 = Mem[r31+37] = Mem[37] => r1 = B
sub r2, r2, r2 // r2 = 0
lw r2, r31, 11 // r2 = Mem[r31+11] = Mem[11] => r2 = S[1]
add r1, r2, r1 // r1 = r1+ r2 (B = B + S[1])

// Encryption
sub r29, r29, r29 // r29 = 0
addi r29, r29, 12 // r29 = 12
sub r2, r2, r2 // r2 = 0 ( i = 0)
LOOP:addi r2, r2, 1 // r2 = 1 (i = 1)

// A
and r3, r0, r1 // r3 = r0 & r1 (A & B)
nor r4, r0, r1 // r4 = !(r0 | r1) (!(A | B))
nor r0, r3, r4 // r0 = !(r3 | r4) (A = A xor B)
shl r3, r1, 27 // r3 = r1 << 27
shr r3, r3, 27 // r3 = r3 >> 27 (r3 = B(4 downto 0))
sub r31, r31, r31 // r31 = 0
beq r3, r31, 63
addi r31, r31, 1 // r31 = 1
beq r3, r31, 141 // if(B = 1)
addi r31, r31, 1
beq r3, r31, 142
addi r31, r31, 1
beq r3, r31, 143
addi r31, r31, 1
beq r3, r31, 144
addi r31, r31, 1
beq r3, r31, 145
addi r31, r31, 1
beq r3, r31, 146
addi r31, r31, 1
beq r3, r31, 147
addi r31, r31, 1
beq r3, r31, 148
addi r31, r31, 1
beq r3, r31, 149
addi r31, r31, 1
beq r3, r31, 150
addi r31, r31, 1
beq r3, r31, 151
addi r31, r31, 1
beq r3, r31, 152
addi r31, r31, 1
beq r3, r31, 153
addi r31, r31, 1
beq r3, r31, 154
addi r31, r31, 1
beq r3, r31, 155
addi r31, r31, 1
beq r3, r31, 156
addi r31, r31, 1
beq r3, r31, 157
addi r31, r31, 1
beq r3, r31, 158
addi r31, r31, 1
beq r3, r31, 159
addi r31, r31, 1
beq r3, r31, 160
addi r31, r31, 1
beq r3, r31, 161
addi r31, r31, 1
beq r3, r31, 162
addi r31, r31, 1
beq r3, r31, 163
addi r31, r31, 1
beq r3, r31, 164
addi r31, r31, 1
beq r3, r31, 165
addi r31, r31, 1
beq r3, r31, 166
addi r31, r31, 1
beq r3, r31, 167
addi r31, r31, 1
beq r3, r31, 168
addi r31, r31, 1
beq r3, r31, 169
addi r31, r31, 1
beq r3, r31, 170
addi r31, r31, 1
beq r3, r31, 171
add r0, r4, r0 // r0 = r4+r0 (A = (A xor B) <<< B)
add r30, r2, r2 // r30 = r2 + r2 (2*i)
lw r3, r30, 10 // r3 = S[2i]
add r0, r0, r3 // r0 = r0 + r3 (A = (A xor B) <<< B + S[2i])

// B
and r3, r0, r1 // ( A & B)
nor r4, r0, r1 // (!(A | B))
nor r1, r3, 24 // B = A xor B
shl r3, r0, 27 // r3 = r0 << 27
shr r3, r3, 27 // r3 = r0 >> 27 (r3 = A(4 downto 0))
sub r31, r31, r31 // r31 = 0
beq r3, r31, 63
addi r31, r31, 1 // r31 = 1
beq r3, r31, 162// if(A = 1)
addi r31, r31, 1
beq r3, r31, 163
addi r31, r31, 1
beq r3, r31, 164
addi r31, r31, 1
beq r3, r31, 165
addi r31, r31, 1
beq r3, r31, 166
addi r31, r31, 1
beq r3, r31, 167
addi r31, r31, 1
beq r3, r31, 168
addi r31, r31, 1
beq r3, r31, 169
addi r31, r31, 1
beq r3, r31, 170
addi r31, r31, 1
beq r3, r31, 171
addi r31, r31, 1
beq r3, r31, 172
addi r31, r31, 1
beq r3, r31, 173
addi r31, r31, 1
beq r3, r31, 174
addi r31, r31, 1
beq r3, r31, 175
addi r31, r31, 1
beq r3, r31, 176
addi r31, r31, 1
beq r3, r31, 177
addi r31, r31, 1
beq r3, r31, 178
addi r31, r31, 1
beq r3, r31, 179
addi r31, r31, 1
beq r3, r31, 180
addi r31, r31, 1
beq r3, r31, 181
addi r31, r31, 1
beq r3, r31, 182
addi r31, r31, 1
beq r3, r31, 183
addi r31, r31, 1
beq r3, r31, 184
addi r31, r31, 1
beq r3, r31, 185
addi r31, r31, 1
beq r3, r31, 186
addi r31, r31, 1
beq r3, r31, 187
addi r31, r31, 1
beq r3, r31, 188
addi r31, r31, 1
beq r3, r31, 189
addi r31, r31, 1
beq r3, r31, 190
addi r31, r31, 1
beq r3, r31, 191
addi r31, r31, 1
beq r3, r31,  192
add r1, r4, r1 // r1 = r4 + r1 (B = (A xor B) <<< A)
addi r30, r30, 1 // 2i+1
lw r3, r30, 10 // r3 = S[2i+1]
add r1, r1, r3 // B = (A xor B) <<< A + S[2i+1]
bne r2, r29, -148 // LOOP back
sub r31, r31, r31 // r31 = 0
sw r0, r31, 38 // A' = A
sw r1, r31, 39 // B' = B
hal

// Rotations
// <<< B
shr r4, r0, 31
shl r0, r0, 1
beq r0, r0, -84
shr r4, r0, 30
shl r0, r0, 2
beq r0, r0, -87
shr r4, r0, 29
shl r0, r0, 3
beq r0, r0, -90
shr r4, r0, 28
shl r0, r0, 4
beq r0, r0, -93
shr r4, r0, 27
shl r0, r0, 5
beq r0, r0, -96
shr r4, r0, 26
shl r0, r0, 6
beq r0, r0, -99
shr r4, r0, 25
shl r0, r0, 7
beq r0, r0, -102
shr r4, r0, 24
shl r0, r0, 8
beq r0, r0, -105
shr r4, r0, 23
shl r0, r0, 9
beq r0, r0, -108
shr r4, r0, 22
shl r0, r0, 10
beq r0, r0, -111
shr r4, r0, 21
shl r0, r0, 11
beq r0, r0, -114
shr r4, r0, 20
shl r0, r0, 12
beq r0, r0, -117
shr r4, r0, 19
shl r0, r0, 13
beq r0, r0, -120
shr r4, r0, 18
shl r0, r0, 14
beq r0, r0, -123
shr r4, r0, 17
shl r0, r0, 15
beq r0, r0, -126
shr r4, r0, 16
shl r0, r0, 16
beq r0, r0, -129
shr r4, r0, 15
shl r0, r0, 17
beq r0, r0, -132
shr r4, r0, 14
shl r0, r0, 18
beq r0, r0, -135
shr r4, r0, 13
shl r0, r0, 19
beq r0, r0, -138
shr r4, r0, 12
shl r0, r0, 20
beq r0, r0, -141
shr r4, r0, 11
shl r0, r0, 21
beq r0, r0, -144
shr r4, r0, 10
shl r0, r0, 22
beq r0, r0, -147
shr r4, r0, 9
shl r0, r0, 23
beq r0, r0, -150
shr r4, r0, 8
shl r0, r0, 24
beq r0, r0, -153
shr r4, r0, 7
shl r0, r0, 25
beq r0, r0, -156
shr r4, r0, 6
shl r0, r0, 26
beq r0, r0, -159
shr r4, r0, 5
shl r0, r0, 27
beq r0, r0, -162
shr r4, r0, 4
shl r0, r0, 28
beq r0, r0, -165
shr r4, r0, 3
shl r0, r0, 29
beq r0, r0, -168
shr r4, r0, 2
shl r0, r0, 30
beq r0, r0, -171
shr r4, r0, 1
shl r0, r0, 31
beq r0, r0, -174

// <<< A
shr r4, r1, 31
shl r1, r1, 1
beq r1, r1, -105
shr r4, r1, 30
shl r1, r1, 2
beq r1, r1, -108
shr r4, r1, 29
shl r1, r1, 3
beq r1, r1, -111
shr r4, r1, 28
shl r1, r1, 4
beq r1, r1, -114
shr r4, r1, 27
shl r1, r1, 5
beq r1, r1, -117
shr r4, r1, 26
shl r1, r1, 6
beq r1, r1, -120
shr r4, r1, 25
shl r1, r1, 7
beq r1, r1, -123
shr r4, r1, 24
shl r1, r1, 8
beq r1, r1, -126
shr r4, r1, 23
shl r1, r1, 9
beq r1, r1, -129
shr r4, r1, 22
shl r1, r1, 10
beq r1, r1, -132
shr r4, r1, 21
shl r1, r1, 11
beq r1, r1, -135
shr r4, r1, 20
shl r1, r1, 12
beq r1, r1, -138
shr r4, r1, 19
shl r1, r1, 13
beq r1, r1, -141
shr r4, r1, 18
shl r1, r1, 14
beq r1, r1, -144
shr r4, r1, 17
shl r1, r1, 15
beq r1, r1, -147
shr r4, r1, 16
shl r1, r1, 16
beq r1, r1, -150
shr r4, r1, 15
shl r1, r1, 17
beq r1, r1, -153
shr r4, r1, 14
shl r1, r1, 18
beq r1, r1, -156
shr r4, r1, 13
shl r1, r1, 19
beq r1, r1, -159
shr r4, r1, 12
shl r1, r1, 20
beq r1, r1, -162
shr r4, r1, 11
shl r1, r1, 21
beq r1, r1, -165
shr r4, r1, 10
shl r1, r1, 22
beq r1, r1, -168
shr r4, r1, 9
shl r1, r1, 23
beq r1, r1, -171
shr r4, r1, 8
shl r1, r1, 24
beq r1, r1, -174
shr r4, r1, 7
shl r1, r1, 25
beq r1, r1, -177
shr r4, r1, 6
shl r1, r1, 26
beq r1, r1, -180
shr r4, r1, 5
shl r1, r1, 27
beq r1, r1, -183
shr r4, r1, 4
shl r1, r1, 28
beq r1, r1, -186
shr r4, r1, 3
shl r1, r1, 29
beq r1, r1, -189
shr r4, r1, 2
shl r1, r1, 30
beq r1, r1, -192
shr r4, r1, 1
shl r1, r1, 31
beq r1, r1, -195